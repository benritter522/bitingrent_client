{"version":3,"sources":["Components/Home/Home.js","Components/About/About.js","Components/Songs/Songs.js","Components/Music/Music.js","Components/Plants/Plants.js","App.js","reportWebVitals.js","index.js"],"names":["Home","About","Songs","useState","songs","setSongs","fetchSongs","a","fetch","response","json","data","console","error","deleteSong","id","method","headers","filteredSongs","filter","song","_id","useEffect","className","map","title","lyrics","onClick","event","Music","to","path","component","Plants","plants","setPlants","fetchPlants","deletePlant","filteredPlants","plant","name","color","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6bb5d4a.chunk.js","sourcesContent":["// import React from 'react';\n\nconst Home = () => {\n    return(\n        <div>\n            <h1>BitingRent Home</h1>\n        </div>\n    )\n}\n\nexport default Home;","// import React from 'react';\n\nconst About = () => {\n    return(\n        <div>\n            <h1>About BitingRent</h1>\n        </div>\n    )\n}\n\nexport default About;","// import React from 'react';\nimport { useEffect, useState } from \"react\";\n\nconst Songs = () => {\n    const [songs, setSongs] = useState([]);\n\n    // Read\n    const fetchSongs = async () => {\n        try {\n        const response = await fetch('http://localhost:3000/songs');\n        const data = await response.json();\n        setSongs(data);\n        } catch(error) {\n        console.error(error); // {msg: error.message} ??\n        }\n    }\n\n    // Delete\n    const deleteSong = async (id) => {\n        try {\n        const response = await fetch(`http://localhost:3000/songs/${id}`, {\n            method: 'DELETE',\n            headers: {\n            'Content-type': 'application/json'\n            }\n        });\n        const data = await response.json();\n        const filteredSongs = songs.filter(song => song._id !== data._id);\n        setSongs(filteredSongs);\n        } catch(error) {\n        console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchSongs();\n    }, [songs]);\n\n    return(\n        <div>\n            <h1>Songs</h1>\n            <ul className=\"songs\">\n                {\n                    songs.map(song => {\n                    return(\n                        <li key={song._id}>\n                        <p>Title: {song.title}</p>\n                        <p>Lyrics: {song.lyrics}</p>\n                        <button onClick={\n                            (event) => {\n                            deleteSong(song._id);\n                            }\n                        }>Delete {song.title}</button>\n                        </li>\n                    )\n                    })\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Songs;","// import React from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\n\nimport Songs from '../Songs/Songs';\n\nconst Music = () => {\n    return(\n        <div>\n            <h1>Welcome to the music!</h1>\n            <Link to=\"/music/songs\">Click here to see my songs!</Link>\n            <Route path=\"/music/songs\" component={Songs} />\n        </div>\n    )\n}\n\n\nexport default Music;","// // import React from 'react';\nimport { useState, useEffect } from 'react';\n\nconst Plants = () => {\n    const [plants, setPlants] = useState([]);\n\n  // Read\n    const fetchPlants = async () => {\n        try {\n        const response = await fetch('http://localhost:3000/plants');\n        const data = await response.json();\n        setPlants(data);\n        } catch(error) {\n        console.error(error); // {msg: error.message} ??\n        }\n    }\n\n    // Delete\n    const deletePlant = async (id) => {\n        try {\n        const response = await fetch(`http://localhost:3000/plants/${id}`, {\n            method: 'DELETE',\n            headers: {\n            'Content-type': 'application/json'\n            }\n        });\n        const data = await response.json();\n        const filteredPlants = plants.filter(plant => plant._id !== data._id);\n        setPlants(filteredPlants);\n        } catch(error) {\n        console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        fetchPlants();\n    }, [plants]);\n\n    return(\n        <div>\n            <h1>Plants</h1>\n            <ul className=\"plants\">\n                {\n                    plants.map(plant => {\n                    return(\n                        <li key={plant._id}>\n                        <p>{plant.name} | {plant.color}</p>\n                        <button onClick={\n                            (event) => {\n                            deletePlant(plant._id);\n                            }\n                        }>Delete {plant.name}</button>\n                        </li>\n                    )\n                    })\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Plants;","import './App.css';\n// import { useEffect, useState } from 'react';\nimport { Route, Link, Switch } from 'react-router-dom';\n// reference /Users/Ben/SEIR/lectures/w08d03/react-router/react-bitcoin-router\n\nimport Home from './Components/Home/Home';\nimport About from './Components/About/About';\nimport Music from './Components/Music/Music';\n// import Songs from './Components/Songs/Songs';\nimport Plants from './Components/Plants/Plants';\n\nfunction App() {\n  // const [token, setToken] = useState(''); // use for auth\n\n  // Register\n  // Login\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <nav>\n          <Link to=\"/\">\n            <h1>BitingRent</h1>\n          </Link>\n          <Link to=\"/about\">About</Link>\n          <Link to=\"/music\">Music</Link>\n          {/* <Link to=\"/songs\">Songs</Link> */}\n          <Link to=\"/plants\">Plants</Link>\n        </nav>\n        <Switch>\n          <Route exact path =\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/music\" component={Music} />\n          {/* <Route path=\"/songs\" component={Songs} /> */}\n          <Route path=\"/plants\" component={Plants} />\n        </Switch>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}